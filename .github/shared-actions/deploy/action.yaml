name: Deploy to staging
description: This action should deploy the current branch to staging.
inputs:
  organization:
    description: 'Set the organization name both in docker and github'
    required: false
    default: frontegg
  github_token:
    description: 'The github token'
    required: true
  repository_name:
    description: 'The repository name'
    required: true
  environment:
    description: 'Environment'
    required: true
  docker_hub_user:
    description: 'Docker Hub User'
    required: true
  docker_hub_password:
    description: 'Docker Hub Password'
    required: true
  current_tag:
    description: 'The Tag to use when creating a new version Tag and version'
    required: false
    default: ${GITHUB_SHA::7}

runs:
  using: "composite"
  steps:
  - name: sasx
    id: xxx
    run: |
      echo ${{ inputs.current_tag }}
      echo ${GITHUB_SHA::7}
      echo ::set-output name=poop::"${GITHUB_SHA::7}"
    shell: bash
  - name: s
    id: test
    run: |
      echo ${GITHUB_SHA::7}
      echo ::set-output name=poop::"${{ inputs.current_tag || steps.xxx.outputs.poop }}"
    shell: bash
  - name: Set variables
    id: variables
    run: |
      echo ::set-output name=new-tag::"${{ inputs.environment }}-$(date +'%Y%m%d.%H%M%S')"
      echo ::set-output name=registry::"${{ inputs.organization }}/${{ inputs.repository_name }}"
    shell: bash
  - name: display variables
    run: |
      echo ${{ steps.test.outputs.poop }}
      echo ${{ steps.variables.outputs.new-tag }}
      echo ${{ steps.variables.outputs.registry }}
    shell: bash
  - name: Login to Docker Hub
    uses: docker/login-action@v1
    with:
      username: ${{ inputs.docker_hub_user }}
      password: ${{ inputs.docker_hub_password }}
#  - name: Extract metadata (tags, labels) for Docker
#    id: meta
#    uses: docker/metadata-action@v3
#    with:
#      images: frontegg/api-gateway-poc
  - name: Tag docker
    shell: bash
    run: |
      echo ${{ steps.variables.outputs.new-tag }}  --> ${{ inputs.current_tag }}

  - name: Tag docker
    shell: bash
    run: |
      docker manifest create ${{ steps.variables.outputs.registry }}:${{ steps.variables.outputs.new-tag }} ${{ steps.variables.outputs.registry }}:${{ steps.test.outputs.poop }}
      docker manifest push ${{ steps.variables.outputs.registry }}:${{ steps.variables.outputs.new-tag }}

  - run: |
      git tag ${{ inputs.environment }} --force && git push origin refs/tags/${{ inputs.environment }} --force
    shell: bash

#  - uses: rickstaa/action-create-tag@v1
#    with:
#      github_token: ${{ inputs.github_token }}
#      tag: ${{ steps.variables.outputs.new-tag }}
#      message: "[Automated Tag] - Tag version"
#
#  - uses: rickstaa/action-create-tag@v1
#    with:
#      github_token: ${{ inputs.github_token }}
#      tag: ${{ inputs.environment}}
#      message: "[Automated Tag] - Tag version"
#      force_push_tag: true
#
#  - name: Git Tag with new tag
#    uses: tvdias/github-tagger@v0.0.1
#    with:
#      repo-token: ${{ inputs.github_token }}
#      tag: ${{ inputs.environment}}-${{ steps.variables.outputs.new-tag }}
#
#  - name: Git Tag with new tag
#    run: |
#      git tag ${{ inputs.environment}} --force && git push origin refs/tags/${{ inputs.environment}} --force
#    shell: bash
#
