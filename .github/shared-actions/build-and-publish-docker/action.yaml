name: Build and publish docker
description: This action should Build a docker image and publish to docker hub
inputs:
  tag:
    description: 'Set the tag of the docker image'
    required: true
  build_image_script:
    description: 'The shell script that builds the docker image'
    required: true
    default: ./ci/build-and-publish-image.sh
  npm_token:
    description: 'Npm Token'
    required: true
  docker_hub_password:
    description: 'Docker Hub Password'
    required: true
  docker_hub_user:
    description: 'Docker Hub User'
    required: true
  tag_name:
    description: 'Set the tag of the docker image'
    required: false
  repository:
    description: 'The repository name'
    required: true

runs:
  using: "composite"
  steps:
    - name: Prepare params
      id: params
      run: |
        if [ -z "${{ inputs.tag_name }}" ]
        then
          echo "::set-output name=tag_name::${{ github.ref_name }}"
        else
          echo "::set-output name=tag_name::${{ inputs.tag_name }}"
        fi
      shell: bash
    - name: Display Current variables
      run: |
        echo input tag_name: ${{ steps.params.outputs.tag_name }}
        echo Commit Tag: ${{ inputs.tag }}
      shell: bash
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username:  ${{ inputs.docker_hub_user }}
        password: ${{ inputs.docker_hub_password }}
    - name: Check if Docker Image exists
      id: check-image
      shell: bash
      run: |
        if docker manifest inspect frontegg/${{ inputs.repository }}:${{ inputs.tag }} > /dev/null 2>&1; then
          echo "Docker image exists, no need to build the image"
          echo "image-exist=true" >> $GITHUB_OUTPUT
        else
          echo "Docker image does not exist, starting to build the image"
          echo "image-exist=false" >> $GITHUB_OUTPUT
        fi
    - name: Build and push docker image
      if: ${{ steps.check-image.outputs.image-exist == 'false' }}
      run: |
        echo using script ${{ inputs.build_image_script }} to build the image.
        sudo chmod +x ${{ inputs.build_image_script }}
        ${{ inputs.build_image_script }}
      shell: bash
      env:
        COMMIT_HASH: ${{ inputs.tag }}
        TAG_NAME: ${{ steps.params.outputs.tag_name }}
        NPM_TOKEN: ${{ inputs.npm_token }}
        DOCKER_HUB_USER: ${{ inputs.docker_hub_user }}
        DOCKER_HUB_PASSWORD: ${{ inputs.docker_hub_password }}
    - name: Tag current image with latest tag
      if: ${{ steps.check-image.outputs.image-exist == 'true' }}
      run: |
        docker manifest create frontegg/${{ inputs.repository }}:${{ inputs.tag }} \
        frontegg/${{ inputs.repository }}:master-latest
        docker manifest push ${{ steps.variables.outputs.registry }}:master-latest
      shell: bash

