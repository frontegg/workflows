name: Main Service Deployment Workflow

on:
  workflow_call:
    inputs:
      tag:
        required: false
        type: string
      repository_name:
        type: string
        required: true
      has_hybrid:
        required: false
        default: false
        type: boolean
      staging_environment_name:
        required: false
        default: staging
        type: string
      au_environment_name:
        required: false
        default: production-au
        type: string
      deploy_au:
        required: false
        default: true
        type: boolean
      us_environment_name:
        required: false
        default: production-us
        type: string
      deploy_us:
        required: false
        default: true
        type: boolean
      global_environment_name:
        required: false
        default: production-global
        type: string
      build_image_script:
        required: false
        default: ./ci/build-and-publish-image.sh
        type: string
      build_hybrid_image_script:
        required: false
        default: ./ci/build-and-publish-hybrid-image.sh
        type: string
      ref:
        required: false
        default: ""
        type: string
      workflows_version:
        required: false
        default: ""
        type: string
    secrets:
      npm_token:
        description: "Npm Token"
        required: true
      docker_hub_password:
        description: "Docker Hub Password"
        required: true
      docker_hub_user:
        description: "Docker Hub User"
        required: true
      admin_github_token:
        description: "Github repository admin token"
        required: true
      slack_production_webhook:
        description: "Slack webhook token"
        required: false
      SPLIT_CHECK_DEPLOYMENT_API_KEY:
        description: "Split.io SDK key"
        required: true
      SPLIT_EVAL_KEY:
        description: "Split.io staging env key"
        required: true

jobs:
  #  check-changes:
  #    name: Check Changes
  #    runs-on: ubuntu-latest
  #    outputs:
  #      code_change: ${{ steps.changes.outputs.code-change }}
  #      chart_change: ${{ steps.changes.outputs.chart-change }}
  #    steps:
  #      - name: Checkout ${{ inputs.repository_name }}
  #        uses: actions/checkout@v4
  #        with:
  #          repository: frontegg/${{ inputs.repository_name }}
  #          ref: ${{ inputs.ref }}
  #          token: ${{ secrets.admin_github_token }}
  #      - uses: AurorNZ/paths-filter@v3
  #        id: changes
  #        with:
  #          filters: |
  #            code-change:
  #              - '**'
  #              - '!k8s/**'
  #            chart-change:
  #              - '!**'
  #              - 'k8s/**'

  main-with-image:
    name: Build Image and deploy
    if: true # ${{ needs.check-changes.outputs.code_change == 'true' }}
    # needs: [ check-changes ]
    uses: frontegg/workflows/.github/workflows/main-with-image.yaml@master
    with:
      tag: ${{ inputs.tag }}
      repository_name: ${{ inputs.repository_name }}
      has_hybrid: ${{ inputs.has_hybrid }}
      staging_environment_name: ${{ inputs.staging_environment_name }}
      au_environment_name: ${{ inputs.au_environment_name }}
      us_environment_name: ${{ inputs.us_environment_name }}
      global_environment_name: ${{ inputs.global_environment_name }}
      deploy_us: ${{ inputs.deploy_us }}
      deploy_au: ${{ inputs.deploy_au }}
      build_image_script: ${{ inputs.build_image_script }}
      build_hybrid_image_script: ${{ inputs.build_hybrid_image_script }}
      ref: ${{ inputs.ref }}
      workflows_version: ${{ inputs.workflows_version }}
      code_changed: true # ${{ needs.check-changes.outputs.code_change == 'true' }}
      chart_changed: true # ${{ needs.check-changes.outputs.chart_change == 'true' }}
    secrets:
      npm_token: ${{ secrets.npm_token }}
      docker_hub_password: ${{ secrets.docker_hub_password }}
      docker_hub_user: ${{ secrets.docker_hub_user }}
      admin_github_token: ${{ secrets.admin_github_token }}
      slack_production_webhook: ${{ secrets.slack_production_webhook }}
      split_api_key: ${{ secrets.SPLIT_CHECK_DEPLOYMENT_API_KEY }}
      split_eval_key: ${{ secrets.SPLIT_EVAL_KEY }}
      checkly_api_key: ${{ secrets.CHECKLY_API_KEY_2 }}
      checkly_account_id: ${{ secrets.CHECKLY_ACCOUNT_ID_2 }}
      
#  main-without-image:
#    name: Deploy
#    if: ${{ needs.check-changes.outputs.code_change == 'false' && needs.check-changes.outputs.chart_change == 'true' }}
#    needs: [ check-changes ]
#    uses: frontegg/workflows/.github/workflows/main-without-image.yaml@master
#    with:
#      tag: ${{ inputs.tag }}
#      repository_name: ${{ inputs.repository_name }}
#      has_hybrid: ${{ inputs.has_hybrid }}
#      staging_environment_name: ${{ inputs.staging_environment_name }}
#      au_environment_name: ${{ inputs.au_environment_name }}
#      us_environment_name: ${{ inputs.us_environment_name }}
#      global_environment_name: ${{ inputs.global_environment_name }}
#      build_image_script: ${{ inputs.build_image_script }}
#      build_hybrid_image_script: ${{ inputs.build_hybrid_image_script }}
#      ref: ${{ inputs.ref }}
#      workflows_version: ${{ inputs.workflows_version }}
#      code_changed: ${{ needs.check-changes.outputs.code_change == 'true' }}
#      chart_changed: ${{ needs.check-changes.outputs.chart_change == 'true' }}
#    secrets:
#      npm_token: ${{ secrets.npm_token }}
#      docker_hub_password: ${{ secrets.docker_hub_password }}
#      docker_hub_user: ${{ secrets.docker_hub_user }}
#      admin_github_token: ${{ secrets.admin_github_token }}
#      slack_production_webhook: ${{ secrets.slack_production_webhook }}
