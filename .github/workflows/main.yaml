name: POC for main workflow

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      repository_name:
        type: string
        required: true
      has_hybrid:
        required: false
        default: false
        type: boolean
      enable_notifications:
        required: false
        default: true
        type: boolean
    secrets:
      npm_token:
        description: 'Npm Token'
        required: true
      docker_hub_password:
        description: 'Docker Hub Password'
        required: true
      docker_hub_user:
        description: 'Docker Hub User'
        required: true
      opsgenie_key:
        description: 'OpsGenie api key'
        required: true

jobs:
#  build-docker:
#    name: Build and publish docker image
#    runs-on: ubuntu-latest
#    steps:
#      - name: Display Current Tag/SHA
#        run: echo Tag/SHA ${{ inputs.tag }}
#        shell: bash
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Build and push docker image with tag ${{ inputs.tag }}
#        run: |
#          make build-docker-image NPM_TOKEN=${{ secrets.npm_token }} COMMIT_HASH=${{ inputs.tag }} TAG_NAME=${{ env.BRANCH_NAME }}
#          make push-docker-image
#        shell: bash
#        env:
#          COMMIT_HASH: ${{ github.sha }}
#          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
#          DOCKER_HUB_USER: ${{ secrets.docker_hub_user }}
#          DOCKER_HUB_PASSWORD: ${{ secrets.docker_hub_password }}
#
#  build-hybrid-docker:
#    name: Build and publish hybrid docker image
#    runs-on: ubuntu-latest
#    if: inputs.has_hybrid
#    steps:
#      - name: Display Current Tag/SHA
#        run: echo Tag/SHA ${{ inputs.tag }}
#        shell: bash
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Build and push docker image with tag ${{ inputs.tag }}
#        id: build-docker
#        run: |
#          HYBRID_VERSION=$(date +%Y.%-m.%-d%H%M%S)
#          echo ${HYBRID_VERSION}
#          echo ::set-output name=version::"${HYBRID_VERSION}"
#          make build-hybrid-docker-image NPM_TOKEN=${{ secrets.npm_token }} \
#          COMMIT_HASH=${{ inputs.tag }} \
#          TAG_NAME=${{ env.BRANCH_NAME }} \
#          HYBRID_VERSION=${HYBRID_VERSION}
#          make push-hybrid-docker-image
#        shell: bash
#        env:
#          DOCKER_HUB_USER: ${{ secrets.docker_hub_user }}
#          DOCKER_HUB_PASSWORD: ${{ secrets.docker_hub_password }}
#      - uses: rickstaa/action-create-tag@v1
#        with:
#          tag: hybrid-${{ steps.build-docker.outputs.version }}
#          message: "Latest hybrid release"
#
#  deploy-to-staging:
#    name: Deploy to staging
#    runs-on: ubuntu-latest
#    needs:
#      - build-docker
#    steps:
#      - name: Checkout codes
#        uses: actions/checkout@v3
#        with:
#          path: code
#      - name: Checkout workflows
#        uses: actions/checkout@v3
#        with:
#          repository: frontegg/workflows
#          path: workflows
#      - name: 'Deploy to staging'
#        uses: ./workflows/.github/shared-actions/tag-versions
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          repository_name: ${{ inputs.repository_name }}
#          environment: staging
#          docker_hub_user: ${{ secrets.docker_hub_user }}
#          docker_hub_password: ${{ secrets.docker_hub_password }}
#          current_tag: ${{ inputs.tag }}
#

  failed-pipeline:
    name: Failure Notification
    if: success() && ${{ inputs.enable_notifications == true }}
    runs-on: ubuntu-latest
    steps:
#      - name: View the github context
#        run: echo "$GITHUB_CONTEXT"
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        shell: bash
      - uses: rockem/create-opsgenie-alert-action@v1
        with:
          api_key: ${{ secrets.opsgenie_key }}
          alias: master-pipeline-failure
          message: >
            Dear ${{ github.actor }}, ${{ github.repository }} Master is broken
          description: >
            ${{ github.repository }} master/main pipeline has failed.
            Click here to see the pipelines
            https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
            <a href='https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID >Here</a>.
          priority: P2
          tags: backend,timeout
