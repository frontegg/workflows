name: Build docker image and Start Frontegg's Virtual Environment

on:
  workflow_call:
    inputs:
      volatileEnvironment:
        type: boolean
        required: false
        description: 'Creates a Volatile environment not related to other branches, ingresses will get the value of x.random.domain'
        default: false
      envDomain:
        type: string
        required: false
        description: 'Set the environment domain so for ingress hosts, for example domain xxx.com will set portal.hash.xxx.com'
        default: "dev.frontegg.com"
      terminationProtection:
        type: boolean
        required: false
        description: 'Termination protection prevents the environment to be shut down after default time'
        default: false
      leaseTime:
        type: string
        required: false
        description: 'Lease Time is the amount of hours the venv should be running, minimum is one hour and maximum is 6, default is 1 hour'
        default: "1"
    secrets:
      admin_github_token:
        description: 'Github repository admin token'
        required: true
      argocd_password:
        description: 'ArgoCD password'
        required: true
      slack_production_webhook:
        description: 'Set the slack channel token to enable notification'
        required: false

jobs:
  start-venv:
    name: start venv
    runs-on: ubuntu-latest
    outputs:
      environmentId: ${{ steps.venv-actions.outputs.environmentId }}
      portalUrl: ${{ steps.venv-actions.outputs.portalUrl }}
      apiUrl: ${{ steps.venv-actions.outputs.apiUrl }}
    steps:
      - name: Checkout Workflows
        uses: actions/checkout@v3
        with:
          repository: frontegg/workflows
          path: workflows
      - uses: ./workflows/.github/shared-actions/start-venv
        name: Generate venv files
        id: venv-actions
        with:
          admin_github_token: ${{ secrets.admin_github_token }}
          volatileEnvironment: ${{ inputs.volatileEnvironment }}
          envDomain: ${{ inputs.envDomain }}
          terminationProtection: ${{ inputs.terminationProtection }}
          leaseTime: ${{ inputs.leaseTime }}
          venvRepoDirectory: ${{ github.workspace }}/venv/environments

  wait:
    name: waiting for venv readiness
    needs: [start-venv, build-and-publish-docker]
    runs-on: [self-hosted]
    steps:
      - name: Checkout Workflows
        uses: actions/checkout@v3
        with:
          repository: frontegg/workflows
          path: workflows
      - name: wait for venv readiness
        uses: ./workflows/.github/shared-actions/wait-for-venv
        with:
          argocd_password: ${{ secrets.argocd_password }}
          environmentId: ${{ needs.start-venv.outputs.environmentId }}

  notify:
    name: Notify outcome
    needs: [wait]
    steps:
      - name: Assign variable
        id: secret
        run: echo '::set-output name=secret::${{ secrets.slack_production_webhook }}'
      - name: Notify Slack on deployment
        if: steps.secret.outputs.secret
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: Production
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/67857107?s=40&v=4
          SLACK_MESSAGE: |
            ${{ github.actor }} your venv is ready. :rocket:
            You can access the portal at ${{ needs.start-venv.outputs.portalUrl }}
          SLACK_TITLE: |
            Yay, ${{ github.actor }} your venv is ready.
          SLACK_USERNAME: ${{ github.actor }}
          SLACK_WEBHOOK: ${{ secrets.slack_production_webhook }}
          MSG_MINIMAL: actions url
