name: Build docker image and Start Frontegg's Virtual Environment

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: false
        description: 'Set the tag in which the Docker image will be tag with'
      volatileEnvironment:
        type: boolean
        required: false
        description: 'Creates a Volatile environment not related to other branches, ingresses will get the value of x.random.domain'
        default: false
      envDomain:
        type: string
        required: false
        description: 'Set the environment domain so for ingress hosts, for example domain xxx.com will set portal.hash.xxx.com'
        default: "dev.frontegg.com"
      terminationProtection:
        type: boolean
        required: false
        description: 'Termination protection prevents the environment to be shut down after default time'
        default: false
      leaseTime:
        type: string
        required: false
        description: 'Lease Time is the amount of hours the venv should be running, minimum is one hour and maximum is 6, default is 1 hour'
        default: "1"
      build_image_script:
        required: false
        default: ./ci/build-and-publish-image.sh
        type: string
    secrets:
      admin_github_token:
        description: 'Github repository admin token'
        required: true
      argocd_password:
        description: 'ArgoCD password'
        required: true
      npm_token:
        description: 'Npm Token'
        required: true
      docker_hub_password:
        description: 'Docker Hub Password'
        required: true
      docker_hub_user:
        description: 'Docker Hub User'
        required: true

jobs:
  build-and-publish-docker:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    steps:
      - name: "Prepare parameters"
        uses: actions/github-script@v6
        id: 'params'
        with:
          result-encoding: json
          script: |
            let tag = core.getInput('tag');
            if(!tag) {
              core.info(`Tag was not provided, setting tag as short_sha`);
              tag = context.sha.substring(0, 7);
            }
            const branchName = context.ref.replace('refs/heads/', '');
            core.info(`Branch name is ${branchName}`);
            const hashedBranch = Buffer.from(branchName).toString('base64').toLowerCase().replace('/[^A-Za-z0-9]/g', '');
            const result = { hashedBranch, tag };
            console.log(`result: ${JSON.stringify(result)}`);
            return result;
      - name: Checkout Current Repository
        uses: actions/checkout@v3
      - name: Checkout Workflows
        uses: actions/checkout@v3
        with:
          repository: frontegg/workflows
          path: workflows
      - name: build and publish docker image
        uses: ./workflows/.github/shared-actions/build-and-publish-docker
        with:
          tag: ${{ fromJSON(steps.params.outputs.result).tag }}
          tag_name: ${{ fromJSON(steps.params.outputs.result).hashedBranch }}
          build_image_script: ${{ inputs.build_image_script }}
          npm_token: ${{ secrets.npm_token }}
          docker_hub_user: ${{ secrets.docker_hub_user }}
          docker_hub_password: ${{ secrets.docker_hub_password }}

  start-venv:
    name: start-venv
    runs-on: ubuntu-latest
    outputs:
      environmentId: ${{ steps.venv-actions.outputs.environmentId }}
      portalUrl: ${{ steps.venv-actions.outputs.portalUrl }}
      apiUrl: ${{ steps.venv-actions.outputs.apiUrl }}
    steps:
      - name: Checkout Workflows
        uses: actions/checkout@v3
        with:
          repository: frontegg/workflows
          path: workflows
      - uses: ./workflows/.github/shared-actions/start-venv
        id: venv-actions
        with:
          admin_github_token: ${{ secrets.admin_github_token }}
          volatileEnvironment: ${{ inputs.volatileEnvironment }}
          envDomain: ${{ inputs.envDomain }}
          terminationProtection: ${{ inputs.terminationProtection }}
          leaseTime: ${{ inputs.leaseTime }}
          venvRepoDirectory: ${{ github.workspace }}/venv/environments

  wait:
    name: wait-for-venv-ready
    needs: [start-venv, build-and-publish-docker]
    runs-on: [self-hosted]
    steps:
      - name: Checkout Workflows
        uses: actions/checkout@v3
        with:
          repository: frontegg/workflows
          path: workflows
      - name: Wait for venv
        uses: ./workflows/.github/shared-actions/wait-for-venv
        with:
          argocd_password: ${{ secrets.argocd_password }}
          environmentId: ${{ needs.start-venv.outputs.environmentId }}
