name: Build docker image and Start Frontegg's Virtual Environment

on:
  workflow_call:
    inputs:
      volatileEnvironment:
        type: boolean
        required: false
        description: 'Creates a Volatile environment not related to other branches, ingresses will get the value of x.random.domain'
        default: false
      envDomain:
        type: string
        required: false
        description: 'Set the environment domain so for ingress hosts, for example domain xxx.com will set portal.hash.xxx.com'
        default: "dev.frontegg.com"
      terminationProtection:
        type: boolean
        required: false
        description: 'Termination protection prevents the environment to be shut down after default time'
        default: false
      leaseTime:
        type: string
        required: false
        description: 'Lease Time is the amount of hours the venv should be running, minimum is one hour and maximum is 6, default is 1 hour'
        default: "1"
      build_image_script:
        required: false
        default: ./ci/build-and-publish-image.sh
        type: string
    secrets:
      admin_github_token:
        description: 'Github repository admin token'
        required: true
      argocd_password:
        description: 'ArgoCD password'
        required: true
      npm_token:
        description: 'Npm Token'
        required: true
      docker_hub_password:
        description: 'Docker Hub Password'
        required: true
      docker_hub_user:
        description: 'Docker Hub User'
        required: true

jobs:
  build-and-publish-docker:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    steps:
      - name: "Prepare parameters"
        uses: actions/github-script@v6
        id: 'params'
        with:
          result-encoding: json
          script: |
            let tag = core.getInput('tag');
           
            if(tag) {
              tag = context.sha.substring(0, 7);
            }
            const branchName = context.ref.replace('refs/heads/', '');
            const hashedBranch =  branchName.split('')
              .reduce(function (a, b) {
                a = (a << 5) - a + b.charCodeAt(0);
                return a & a;
                }, 0)
            .toString();
            const result = { hashedBranch, tag }
            console.log(`result: ${JSON.stringify(result)}`)
            return result;
      - name: Checkout Current Repository
        uses: actions/checkout@v3
      - name: Checkout Workflows
        uses: actions/checkout@v3
        with:
          repository: frontegg/workflows
          path: workflows
      - name: build and publish docker image
        uses: ./workflows/.github/shared-actions/build-and-publish-docker
        with:
          tag: ${{ fromJSON(steps.params.outputs.result).tag }}
          tag_name: ${{ fromJSON(steps.params.outputs.result).hashedBranch }}
          build_image_script: ${{ inputs.build_image_script }}
          npm_token: ${{ secrets.npm_token }}
          docker_hub_user: ${{ secrets.docker_hub_user }}
          docker_hub_password: ${{ secrets.docker_hub_password }}

  start-venv:
    name: start-venv
    runs-on: ubuntu-latest
    outputs:
      environmentId: ${{ steps.venv-actions.outputs.environmentId }}
      portalUrl: ${{ steps.venv-actions.outputs.portalUrl }}
      apiUrl: ${{ steps.venv-actions.outputs.apiUrl }}
    steps:
      - name: Checkout Venv Repository
        uses: actions/checkout@v3
        with:
          repository: 'frontegg/venv'
          path: venv
          token: ${{ secrets.admin_github_token }}
      - name: Checkout Venv Actions
        uses: actions/checkout@v3
        with:
          repository: 'frontegg/venv-actions'
          path: venv-actions
          token: ${{ secrets.admin_github_token }}
      - uses: ./venv-actions
        id: venv-actions
        with:
          githubToken: ${{ secrets.admin_github_token }}
          volatileEnvironment: ${{ inputs.volatileEnvironment }}
          envDomain: ${{ inputs.envDomain }}
          terminationProtection: ${{ inputs.terminationProtection }}
          leaseTime: ${{ inputs.leaseTime }}
          venvRepoDirectory: ${{ github.workspace }}/venv/environments
          venvRepository: venv-env-poc
          venvRepositoryMainBranchName: 'master'
      - name: Add and push Env Files
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Continuous Integration
          message: 'Automation Workflow Merge'
          cwd: './venv'
  wait:
    name: wait-for-venv-ready
    needs: [start-venv, build-and-publish-docker]
    runs-on: [self-hosted]
    steps:
      - name: Wait for ArgoCD
        uses: whatnick/wait-action@master
        with:
          time: '3m'
      - uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.4.7
          command: login
          options: argocd-server.argocd.svc.cluster.local --insecure --timeout 900 --plaintext --username admin --password ${{ secrets.argocd_password }}
      - uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.4.7
          command: app wait venv-${{needs.start-venv.outputs.environmentId }}

