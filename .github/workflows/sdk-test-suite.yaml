name: Full Suite Test (API + E2E On Venv)
on:
  workflow_call:
    inputs:
      build_image:
        type: boolean
        required: false
        description: This has no effect on this workflow any more, should be remoeved when all services will remove it
        default: false
      tests_tag:
        type: string
        required: false
        description: Set the e2e-api tests branch tag
        default: master
      react_version: # deprecated
        type: string
        required: false
        description: Set the react version
      client_framework:
        type: string
        required: false
        description: Set the framework name        
      client_framework_version:
        type: string
        required: false
        description: Set the sdk version
      dispatch_id:
        type: string
        required: false
        description: Dispatch id to update status (repo/sha)
    secrets:
      GH_REPOSITORY_ADMIN_TOKEN:
        description: 'Github repository admin token'
        required: true
      DEV_ARGOCD_PASSWORD:
        description: 'ArgoCD password'
        required: true
      NPM_TOKEN:
        description: 'Npm token'
        required: true
      DOCKER_HUB_ACTION_USER:
        description: 'Docker hub user'
        required: true
      DOCKER_HUB_ACTION_PASSWORD:
        description: 'Docker hub password'
        required: true
      MAILOSAUR_API_KEY:
        description: 'MAILOSAUR API KEY'
        required: true
      MAILOSAUR_SERVER_ID:
        description: 'MAILOSAUR SERVER ID'
        required: true
      MAILOSAUR_SERVER_DOMAIN:
        description: 'MAILOSAUR SERVER DOMAIN'
        required: true
      ZEPHYR_TOKEN:
        description: ''
        required: true
      AZURE_APP_CLIENT_ID:
        description: ''
        required: true
      AZURE_APP_SECRET:
        description: ''
        required: true
      GH_FRONTEGG_BOT_APP_ID:
        description: 'Frontegg Bot Creds'
        required: true
      GH_FRONTEGG_BOT_APP_SECRET:
        description: 'Frontegg Bot Creds'
        required: true

env:
  BUCKET_NAME: "frontegg-test-reports"
  AWS_REGION: "us-east-1"

permissions:
  id-token: write
  contents: read
  issues: read
  checks: write
  pull-requests: write
  
jobs:
  prepare-params:
    name: Prepare environment params
    runs-on: ubuntu-latest
    outputs:
      apiUrl: ${{ steps.variables.outputs.apiUrl }}
      portalUrl: ${{ steps.variables.outputs.portalUrl }}
      environmentId: ${{ steps.variables.outputs.environmentId }}
    steps:
      - name: prepare output params
        id: variables
        run: |
          echo "apiUrl=https://api.stg.frontegg.com" >> $GITHUB_OUTPUT
          echo "portalUrl=https://portal.stg.frontegg.com" >> $GITHUB_OUTPUT
      - id: create_bot_token
        name: Create bot token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.GH_FRONTEGG_BOT_APP_ID }}
          private_key: ${{ secrets.GH_FRONTEGG_BOT_APP_SECRET }}
      - name: "Update trigger status"
        uses: frontegg/workflows/.github/shared-actions/update-status@master
        if: ${{ inputs.dispatch_id }}
        with:
          token: ${{ env.BOT_TOKEN }}
          dispatch_id: ${{ inputs.dispatch_id }}
          description: 'Start tests environment ${{ steps.variables.outputs.apiUrl }}'

  run-e2e-test:
    name: "Run E2E tests ${{ inputs.client_framework || 'react' }}@${{ inputs.client_framework_version || inputs.react_version }}"
    if: inputs.client_framework != 'nextjs'
    runs-on: ubuntu-latest
    needs: [ prepare-params ]
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4
        with:
          repository: frontegg/e2e-system-tests
          ref: ${{ inputs.tests_tag }}
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
      - id: create_bot_token
        name: Create bot token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.GH_FRONTEGG_BOT_APP_ID }}
          private_key: ${{ secrets.GH_FRONTEGG_BOT_APP_SECRET }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::527305576865:role/github-action-s3-role
          role-session-name: github-action-session
          aws-region: ${{ env.AWS_REGION }}
      - name: Run E2E Tests from E2E-system-tests repo
        uses: ./.github/actions/e2e-test
        with:
          github_token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          npm_token: ${{ secrets.NPM_TOKEN }}
          server_url: ${{ needs.prepare-params.outputs.apiUrl }}
          portal_url: ${{ needs.prepare-params.outputs.portalUrl }}
          twilio_account_id: ${{ secrets.TWILIO_TEST_ACCOUND_ID }}
          twilio_token: ${{ secrets.TWILIO_TEST_TOKEN }}
          MAILOSAUR_API_KEY: ${{ secrets.MAILOSAUR_API_KEY }}
          MAILOSAUR_SERVER_ID: ${{ secrets.MAILOSAUR_SERVER_ID }}
          MAILOSAUR_SERVER_DOMAIN: ${{ secrets.MAILOSAUR_SERVER_DOMAIN }}
          ZEPHYR_TOKEN: ${{ secrets.ZEPHYR_TOKEN }}
          AZURE_APP_CLIENT_ID: ${{ secrets.AZURE_APP_CLIENT_ID }}
          AZURE_APP_SECRET: ${{ secrets.AZURE_APP_SECRET }}
          FRONTEGG_COGNITO_REGION: ${{ inputs.FRONTEGG_COGNITO_REGION }}
          FRONTEGG_COGNITO_CLIENT_ID: ${{ inputs.FRONTEGG_COGNITO_CLIENT_ID }}
          FRONTEGG_COGNITO_USER_POOL_ID: ${{ inputs.FRONTEGG_COGNITO_USER_POOL_ID }}
          FRONTEGG_COGNITO_CLIENT_SECRET: ${{ inputs.FRONTEGG_COGNITO_CLIENT_SECRET }}
          FRONTEGG_COGNITO_ACCESS_KEY_ID: ${{ inputs.FRONTEGG_COGNITO_ACCESS_KEY_ID }}
          FRONTEGG_COGNITO_SECRET_ACCESS_KEY: ${{ inputs.FRONTEGG_COGNITO_SECRET_ACCESS_KEY }}
          FRONTEGG_FIREBASE_API_KEY: ${{ inputs.FRONTEGG_FIREBASE_API_KEY }}
          FRONTEGG_FIREBASE_SERVICE_ACCOUNT: ${{ inputs.FRONTEGG_FIREBASE_SERVICE_ACCOUNT }}
          FRONTEGG_AUTH0_DOMAIN: ${{ inputs.FRONTEGG_AUTH0_DOMAIN }}
          FRONTEGG_AUTH0_CLIENT_ID: ${{ inputs.FRONTEGG_AUTH0_CLIENT_ID }}
          FRONTEGG_AUTH0_SECRET: ${{ inputs.FRONTEGG_AUTH0_SECRET }}
          dispatch_id: ${{ inputs.dispatch_id }}
          react_version: ${{ inputs.react_version }} # deprecated
          client_framework: ${{ inputs.client_framework }}
          client_framework_version: ${{ inputs.client_framework_version }}
          bot_token: ${{ env.BOT_TOKEN }}
          environment: "staging"
          frontegg_client_id: ${{ secrets.FRONTEGG_STG_CLIENT_ID }}
          frontegg_secret: ${{ secrets.FRONTEGG_STG_SECRET }}

  run-e2e-test-nextjs:
    name: "Run E2E tests ${{ inputs.client_framework }}@${{ inputs.client_framework_version || inputs.react_version }}"
    if: inputs.client_framework == 'nextjs'
    runs-on: ubuntu-latest
    needs: [ prepare-params ]
    continue-on-error: true
    strategy:
        matrix:
            nextjs_router: [ pages, app ]
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4
        with:
          repository: frontegg/e2e-system-tests
          ref: ${{ inputs.tests_tag }}
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
      - id: create_bot_token
        name: Create bot token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.GH_FRONTEGG_BOT_APP_ID }}
          private_key: ${{ secrets.GH_FRONTEGG_BOT_APP_SECRET }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::527305576865:role/github-action-s3-role
          role-session-name: github-action-session
          aws-region: ${{ env.AWS_REGION }}
      - name: Run E2E Tests from E2E-system-tests repo
        uses: ./.github/actions/e2e-test
        with:
          github_token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          npm_token: ${{ secrets.NPM_TOKEN }}
          server_url: ${{ needs.prepare-params.outputs.apiUrl }}
          portal_url: ${{ needs.prepare-params.outputs.portalUrl }}
          twilio_account_id: ${{ secrets.TWILIO_TEST_ACCOUND_ID }}
          twilio_token: ${{ secrets.TWILIO_TEST_TOKEN }}
          MAILOSAUR_API_KEY: ${{ secrets.MAILOSAUR_API_KEY }}
          MAILOSAUR_SERVER_ID: ${{ secrets.MAILOSAUR_SERVER_ID }}
          MAILOSAUR_SERVER_DOMAIN: ${{ secrets.MAILOSAUR_SERVER_DOMAIN }}
          ZEPHYR_TOKEN: ${{ secrets.ZEPHYR_TOKEN }}
          AZURE_APP_CLIENT_ID: ${{ secrets.AZURE_APP_CLIENT_ID }}
          AZURE_APP_SECRET: ${{ secrets.AZURE_APP_SECRET }}
          FRONTEGG_COGNITO_REGION: ${{ inputs.FRONTEGG_COGNITO_REGION }}
          FRONTEGG_COGNITO_CLIENT_ID: ${{ inputs.FRONTEGG_COGNITO_CLIENT_ID }}
          FRONTEGG_COGNITO_USER_POOL_ID: ${{ inputs.FRONTEGG_COGNITO_USER_POOL_ID }}
          FRONTEGG_COGNITO_CLIENT_SECRET: ${{ inputs.FRONTEGG_COGNITO_CLIENT_SECRET }}
          FRONTEGG_COGNITO_ACCESS_KEY_ID: ${{ inputs.FRONTEGG_COGNITO_ACCESS_KEY_ID }}
          FRONTEGG_COGNITO_SECRET_ACCESS_KEY: ${{ inputs.FRONTEGG_COGNITO_SECRET_ACCESS_KEY }}
          FRONTEGG_FIREBASE_API_KEY: ${{ inputs.FRONTEGG_FIREBASE_API_KEY }}
          FRONTEGG_FIREBASE_SERVICE_ACCOUNT: ${{ inputs.FRONTEGG_FIREBASE_SERVICE_ACCOUNT }}
          FRONTEGG_AUTH0_DOMAIN: ${{ inputs.FRONTEGG_AUTH0_DOMAIN }}
          FRONTEGG_AUTH0_CLIENT_ID: ${{ inputs.FRONTEGG_AUTH0_CLIENT_ID }}
          FRONTEGG_AUTH0_SECRET: ${{ inputs.FRONTEGG_AUTH0_SECRET }}
          dispatch_id: ${{ inputs.dispatch_id }}
          react_version: ${{ inputs.react_version }} # deprecated
          client_framework: ${{ inputs.client_framework }}
          client_framework_version: ${{ inputs.client_framework_version }}
          bot_token: ${{ env.BOT_TOKEN }}
          environment: "staging"
          frontegg_client_id: ${{ secrets.FRONTEGG_STG_CLIENT_ID }}
          frontegg_secret: ${{ secrets.FRONTEGG_STG_SECRET }}
          nextjs_router: ${{ matrix.nextjs_router }}

  run-admin-box-test:
    name: "Run Admin Box tests ${{ inputs.client_framework || 'react' }}@${{ inputs.client_framework_version || inputs.react_version }}"
    if: inputs.client_framework != 'nextjs'
    runs-on: ubuntu-latest
    needs: [ prepare-params ]
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4
        with:
          repository: frontegg/e2e-system-tests
          ref: ${{ inputs.tests_tag }}
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
      - id: create_bot_token
        name: Create bot token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.GH_FRONTEGG_BOT_APP_ID }}
          private_key: ${{ secrets.GH_FRONTEGG_BOT_APP_SECRET }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::527305576865:role/github-action-s3-role
          role-session-name: github-action-session
          aws-region: ${{ env.AWS_REGION }}
      - name: Run Admin Box Tests from E2E-system-tests repo
        uses: ./.github/actions/admin-box
        with:
          github_token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          npm_token: ${{ secrets.NPM_TOKEN }}
          server_url: ${{ needs.prepare-params.outputs.apiUrl }}
          portal_url: ${{ needs.prepare-params.outputs.portalUrl }}
          twilio_account_id: ${{ secrets.TWILIO_TEST_ACCOUND_ID }}
          twilio_token: ${{ secrets.TWILIO_TEST_TOKEN }}
          MAILOSAUR_API_KEY: ${{ secrets.MAILOSAUR_API_KEY }}
          MAILOSAUR_SERVER_ID: ${{ secrets.MAILOSAUR_SERVER_ID }}
          MAILOSAUR_SERVER_DOMAIN: ${{ secrets.MAILOSAUR_SERVER_DOMAIN }}
          ZEPHYR_TOKEN: ${{ secrets.ZEPHYR_TOKEN }}
          AZURE_APP_CLIENT_ID: ${{ secrets.AZURE_APP_CLIENT_ID }}
          AZURE_APP_SECRET: ${{ secrets.AZURE_APP_SECRET }}
          FRONTEGG_COGNITO_REGION: ${{ inputs.FRONTEGG_COGNITO_REGION }}
          FRONTEGG_COGNITO_CLIENT_ID: ${{ inputs.FRONTEGG_COGNITO_CLIENT_ID }}
          FRONTEGG_COGNITO_USER_POOL_ID: ${{ inputs.FRONTEGG_COGNITO_USER_POOL_ID }}
          FRONTEGG_COGNITO_CLIENT_SECRET: ${{ inputs.FRONTEGG_COGNITO_CLIENT_SECRET }}
          FRONTEGG_COGNITO_ACCESS_KEY_ID: ${{ inputs.FRONTEGG_COGNITO_ACCESS_KEY_ID }}
          FRONTEGG_COGNITO_SECRET_ACCESS_KEY: ${{ inputs.FRONTEGG_COGNITO_SECRET_ACCESS_KEY }}
          FRONTEGG_FIREBASE_API_KEY: ${{ inputs.FRONTEGG_FIREBASE_API_KEY }}
          FRONTEGG_FIREBASE_SERVICE_ACCOUNT: ${{ inputs.FRONTEGG_FIREBASE_SERVICE_ACCOUNT }}
          FRONTEGG_AUTH0_DOMAIN: ${{ inputs.FRONTEGG_AUTH0_DOMAIN }}
          FRONTEGG_AUTH0_CLIENT_ID: ${{ inputs.FRONTEGG_AUTH0_CLIENT_ID }}
          FRONTEGG_AUTH0_SECRET: ${{ inputs.FRONTEGG_AUTH0_SECRET }}
          dispatch_id: ${{ inputs.dispatch_id }}
          react_version: ${{ inputs.react_version }} # deprecated
          client_framework: ${{ inputs.client_framework }}
          client_framework_version: ${{ inputs.client_framework_version }}
          bot_token: ${{ env.BOT_TOKEN }}
          environment: "staging"
          frontegg_client_id: ${{ secrets.FRONTEGG_STG_CLIENT_ID }}
          frontegg_secret: ${{ secrets.FRONTEGG_STG_SECRET }}

  run-logins-test:
    name: "Run Login Box tests ${{ inputs.client_framework || 'react' }}@${{ inputs.client_framework_version || inputs.react_version }}"
    if: inputs.client_framework != 'nextjs'
    runs-on: ubuntu-latest
    needs: [ prepare-params ]
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4
        with:
          repository: frontegg/e2e-system-tests
          ref: ${{ inputs.tests_tag }}
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
      - id: create_bot_token
        name: Create bot token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.GH_FRONTEGG_BOT_APP_ID }}
          private_key: ${{ secrets.GH_FRONTEGG_BOT_APP_SECRET }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::527305576865:role/github-action-s3-role
          role-session-name: github-action-session
          aws-region: ${{ env.AWS_REGION }}
      - name: Run Login Box Tests from E2E-system-tests repo
        uses: ./.github/actions/login-box
        with:
          github_token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          npm_token: ${{ secrets.NPM_TOKEN }}
          server_url: ${{ needs.prepare-params.outputs.apiUrl }}
          portal_url: ${{ needs.prepare-params.outputs.portalUrl }}
          twilio_account_id: ${{ secrets.TWILIO_TEST_ACCOUND_ID }}
          twilio_token: ${{ secrets.TWILIO_TEST_TOKEN }}
          MAILOSAUR_API_KEY: ${{ secrets.MAILOSAUR_API_KEY }}
          MAILOSAUR_SERVER_ID: ${{ secrets.MAILOSAUR_SERVER_ID }}
          MAILOSAUR_SERVER_DOMAIN: ${{ secrets.MAILOSAUR_SERVER_DOMAIN }}
          ZEPHYR_TOKEN: ${{ secrets.ZEPHYR_TOKEN }}
          AZURE_APP_CLIENT_ID: ${{ secrets.AZURE_APP_CLIENT_ID }}
          AZURE_APP_SECRET: ${{ secrets.AZURE_APP_SECRET }}
          FRONTEGG_COGNITO_REGION: ${{ inputs.COGNITO_REGION }}
          FRONTEGG_COGNITO_CLIENT_ID: ${{ inputs.COGNITO_CLIENT_ID }}
          FRONTEGG_COGNITO_USER_POOL_ID: ${{ inputs.COGNITO_USER_POOL_ID }}
          FRONTEGG_COGNITO_CLIENT_SECRET: ${{ inputs.COGNITO_CLIENT_SECRET }}
          FRONTEGG_COGNITO_ACCESS_KEY_ID: ${{ inputs.COGNITO_ACCESS_KEY_ID }}
          FRONTEGG_COGNITO_SECRET_ACCESS_KEY: ${{ inputs.COGNITO_SECRET_ACCESS_KEY }}
          FRONTEGG_FIREBASE_API_KEY: ${{ inputs.FIREBASE_API_KEY }}
          FRONTEGG_FIREBASE_SERVICE_ACCOUNT: ${{ inputs.FIREBASE_SERVICE_ACCOUNT }}
          FRONTEGG_AUTH0_DOMAIN: ${{ inputs.AUTH0_DOMAIN }}
          FRONTEGG_AUTH0_CLIENT_ID: ${{ inputs.AUTH0_CLIENT_ID }}
          FRONTEGG_AUTH0_SECRET: ${{ inputs.AUTH0_SECRET }}
          dispatch_id: ${{ inputs.dispatch_id }}
          react_version: ${{ inputs.react_version }} # deprecated
          client_framework: ${{ inputs.client_framework }}
          client_framework_version: ${{ inputs.client_framework_version }}
          bot_token: ${{ env.BOT_TOKEN }}
          environment: "staging"
          frontegg_client_id: ${{ secrets.FRONTEGG_STG_CLIENT_ID }}
          frontegg_secret: ${{ secrets.FRONTEGG_STG_SECRET }}

  update-trigger-status:
    name: Update trigger status
    runs-on: ubuntu-latest
    needs: [ run-e2e-test, run-e2e-test-nextjs, run-logins-test, run-admin-box-test, prepare-params ]
    if: ${{ always() && inputs.dispatch_id }}
    steps:
      - id: create_bot_token
        name: Create bot token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.GH_FRONTEGG_BOT_APP_ID }}
          private_key: ${{ secrets.GH_FRONTEGG_BOT_APP_SECRET }}
      - name: "trigger failure status"
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        uses: frontegg/workflows/.github/shared-actions/update-status@master
        with:
          token: ${{ env.BOT_TOKEN }}
          dispatch_id: ${{ inputs.dispatch_id }}
          state: "failure"
          description: 'E2E Tests Failed'
      - name: "trigger success status"
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        uses: frontegg/workflows/.github/shared-actions/update-status@master
        with:
          token: ${{ env.BOT_TOKEN }}
          dispatch_id: ${{ inputs.dispatch_id }}
          state: "success"
          description: 'E2E tests passed'
